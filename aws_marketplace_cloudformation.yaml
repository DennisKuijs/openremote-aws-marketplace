Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      -
        Label:
          default: Instance Configuration
        Parameters:
          - Name
          - Instance
          - Hostname
      - Label:
          default: OpenRemote Configuration
        Parameters:
          - Password
          - Mapdata
          - Mapsettings

Parameters:
    Name:
      Description: Choose a name for your OpenRemote Instance.
      Type: String
      Default: OpenRemote
    Instance:
      Description: Choose a instance based on your monthly budget
      Type: String
      Default: Medium
      AllowedValues:
        - Small
        - Medium
        - Large
    Hostname:
      Description: Fill in the FQDN (Fully Qualified Domain Name) that you want to use for this OpenRemote instance
      Type: String
    Password:
      Description: Create an (admin) password for your OpenRemote instance
      Type: String
      NoEcho: true
    Mapdata:
      Description: Put a link where the system can download your (custom) maptiles (mbtiles)
      Type: String
    Mapsettings:
      Description: Put a link where the system can download your mapsettings.json file
      Type: String

Mappings:
  InstanceType:
    default:
      Small: t4g.small
      Medium: t4g.medium
      Large: t4g.large

Resources:   
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref Name

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: !Ref Name
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.20.0.0/24
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref Name
  
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: !Ref Name
      VpcId: !Ref VPC
  
  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  
  RouteTableAssociate:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  
  SSHKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyFormat: pem
      KeyName: OpenRemote
      KeyType: rsa
      Tags: 
        - Key: Name
          Value: !Ref Name
  
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OpenRemote Security Group
      GroupName: !Ref Name
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
          Description: SSH Access
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
          Description: HTTP Access
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
          Description: HTTPS Access
        - CidrIp: 0.0.0.0/0
          FromPort: 8883
          IpProtocol: tcp
          ToPort: 8883
          Description: MQTT Access
        - CidrIp: 0.0.0.0/0
          FromPort: 162
          IpProtocol: udp
          ToPort: 162
          Description: SNMP Access
  
  InstanceOR:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-00e73ddc3a6fc7dfe
      InstanceType: !FindInMap [InstanceType, default, !Ref Instance]
      KeyName: !Ref SSHKeyPair
      SubnetId: !Ref Subnet
      SecurityGroupIds:
      -  !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Ref Name
      BlockDeviceMappings:
       - DeviceName: /dev/xvda
         Ebs:
          VolumeSize: 30
          VolumeType: gp3
          DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum install htop -y
          sudo yum install -y docker
          sudo service docker start
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo mkdir openremote
          cd openremote
          sudo wget https://raw.githubusercontent.com/openremote/openremote/master/docker-compose.yml
          OR_HOSTNAME="${Hostname}" OR_ADMIN_PASSWORD="${Password}" docker-compose -p openremote up -d
          mkdir map
          cd map
          sudo wget -O mapdata.mbtiles "${Mapdata}"
          sudo wget -O mapsettings.json "${Mapsettings}"
          sudo docker cp mapdata.mbtiles openremote-manager-1:/opt/map/mapdata.mbtiles
          sudo docker cp mapsettings.json openremote-manager-1:/opt/map/mapsettings.json
          sudo docker restart $(docker ps -q)
  
  Hostedzone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref Hostname
  
  DNSRecords:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref Hostedzone
      Name: !Ref Hostname
      Type: A
      TTL: 900
      ResourceRecords:
        - !GetAtt InstanceOR.PublicIp



